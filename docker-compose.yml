version: '2'
services:

  biosamples-webapps-core:
    build: .
    image: biosamples:latest
    links:
    - solr
    - neo4j
    - mongo
    - rabbitmq
    volumes:
    - ./docker/logs:/logs
    command:
    - java
    - -jar
    - -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000
    - webapps-core-4.0.0-SNAPSHOT.war
    environment:
    - spring.data.solr.host=http://solr:8983/solr
    - spring.data.neo4j.uri=bolt://neo4j:7687
    #- spring.data.neo4j.uri=http://neo4j:7474
    - spring.data.neo4j.username=neo4j
    - spring.data.neo4j.indexes.auto=assert
    - spring.data.mongodb.host=mongo
    - spring.rabbitmq.publisher-confirms=true
    - spring.rabbitmq.host=rabbitmq
    - spring.jackson.serialization-inclusion=non_null
    - spring.jackson.serialization.WRITE_NULL_MAP_VALUES=false
    #Configure root path to server from
    - server.servlet.context-path=/biosamples/beta
    - server.context-path=/biosamples/beta
    #Enable use behind a proxy with original urls
    - server.use-forward-headers=true
    #REMOVE FOR PRODUCTION
    - management.security.enabled=false
    #Improve logging
    - logging.file=/logs/webapps-core.log
    - server.tomcat.accesslog.enabled=true
    - server.tomcat.accesslog.directory=/logs
    - server.tomcat.accesslog.prefix=webapps-core.access
    - server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b (%D ms)
    #Enable gzip compression of responses
    - server.compression.enabled=true
    - server.compression.mime-types=application/json,application/hal+json,application/xml,text/html,application/json,text/css
    #Don't waste CPU compressing very small responses
    - server.compression.min-response-size=2048
    # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
    - spring.http.encoding.charset=UTF-8
    # Enable http encoding support.
    - spring.http.encoding.enabled=true
    # Force the encoding to the configured charset on HTTP requests and responses.
    - spring.http.encoding.force=true
    - endpoints.shutdown.enabled=true
    - endpoints.shutdown.sensitive=false
    ports:
    - 8081:8080
    - 9090:9090
    - 8000:8000
    
  biosamples-webapps-sampletab:
    image: biosamples:latest
    links:
    - biosamples-webapps-core
    volumes:
    - ./docker/logs:/logs
    command:
    - java
    - -jar
    - webapps-sampletab-4.0.0-SNAPSHOT.war
    environment:
    - biosamples.client.uri=http://biosamples-webapps-core:8080/biosamples/beta
    - server.servlet.context-path=/biosamples/beta/sampletab
    - server.context-path=/biosamples/beta/sampletab
    - management.security.enabled=false
    - logging.file=/logs/webapps-sampletab.log
    - server.tomcat.accesslog.enabled=true
    - server.tomcat.accesslog.directory=/logs
    - server.tomcat.accesslog.prefix=webapps-sampletab.access
    # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
    - spring.http.encoding.charset=UTF-8
    # Enable http encoding support.
    - spring.http.encoding.enabled=true
    # Force the encoding to the configured charset on HTTP requests and responses.
    - spring.http.encoding.force=true
    - endpoints.shutdown.enabled=true
    - endpoints.shutdown.sensitive=false
    ports:
    - 8082:8080

  
  biosamples-webapps-legacyxml:
    image: biosamples:latest
    links:
    - biosamples-webapps-core
    volumes:
    - ./docker/logs:/logs
    command:
    - java
    - -jar
    - webapps-legacyxml-4.0.0-SNAPSHOT.war
    environment:
    - biosamples.redirect.context=http://localhost:8081/biosamples/beta
    - biosamples.client.uri=http://biosamples-webapps-core:8080/biosamples/beta
    - server.servlet.context-path=/biosamples/beta/xml
    - server.context-path=/biosamples/beta/xml
    - logging.file=/logs/webapps-legacyxml.log
    - endpoints.shutdown.enabled=true
    - endpoints.shutdown.sensitive=false
    ports:
    - 8083:8080
    # - 8000:8000

    
  biosamples-agents-neo4j:
    image: biosamples:latest
    links:
    - neo4j
    - rabbitmq
    volumes:
    - ./docker/logs:/logs
    command:
    - java
    - -jar
    - agents-neo4j-4.0.0-SNAPSHOT.jar
    environment:
    - spring.rabbitmq.publisher-confirms=true
    - spring.rabbitmq.host=rabbitmq
    - spring.rabbitmq.listener.concurrency=250
    - spring.rabbitmq.listener.max-concurrency=250
    - biosamples.agent.neo4j.queuesize=250
    - biosamples.agent.neo4j.queuetime=500
    - spring.data.neo4j.uri=bolt://neo4j:7687
    #- spring.data.neo4j.uri=http://neo4j:7474
    - spring.data.neo4j.username=neo4j
    - spring.data.neo4j.indexes.auto=validate
    - biosamples.agent.neo4j.stayalive=true
    - logging.file=/logs/agents-neo4j.log
    - logging.level=debug
    - logging.level.org.springframework.data.neo4j=debug
    
  biosamples-agents-solr:
    image: biosamples:latest
    links:
    - solr
    - rabbitmq
    volumes:
    - ./docker/logs:/logs
    command:
    - java
    - -jar
    - agents-solr-4.0.0-SNAPSHOT.jar
    environment:
    - spring.rabbitmq.publisher-confirms=true
    - spring.rabbitmq.listener.concurrency=1000
    - spring.rabbitmq.listener.max-concurrency=1000
    - biosamples.agent.solr.queuesize=1000
    - biosamples.agent.solr.queuetime=10000
    - spring.data.solr.host=http://solr:8983/solr
    - spring.rabbitmq.host=rabbitmq
    - biosamples.agent.solr.stayalive=true
    - logging.file=/logs/agents-solr.log
    
  biosamples-agents-curation:
    image: biosamples:latest
    links:
    - rabbitmq
    volumes:
    - ./docker/logs:/logs
    command:
    - java
    - -jar
    - agents-curation-4.0.0-SNAPSHOT.jar
    environment:
    - spring.rabbitmq.publisher-confirms=true
    - spring.rabbitmq.host=rabbitmq
    - biosamples.agent.curation.stayalive=true
    - logging.file=/logs/agents-curation.log
    
  mongo:
    image: mongo:3.2
    volumes:
    - mongo_data:/data/db
    ports:
    - 27017:27017
    
  rabbitmq:
    image: rabbitmq:3.6-management
    hostname: biosamples-rabbitmq
    ports:
    - 15672:15672
    volumes:
    - rabbitmq_data:/var/lib/rabbitmq/mnesia/rabbit@biosamples-rabbitmq
    
  neo4j:
    #we can use enterprise under AGPLv3 because we are open source
    image: neo4j:3.2-enterprise
    environment:
    - NEO4J_AUTH=none
    - NEO4J_dbms_memory_pagecache_size=4G
    - NEO4J_dbms_memory_heap_maxSize=2G
    ports:
    - 7687:7687
    - 7474:7474
    volumes:
    - neo4j_data:/data
    - ./docker/logs/neo4j:/logs
    
  solr:
    image: solr:6.5-alpine
    ports:
    - 8983:8983
    volumes:
    - solr_data:/opt/solr/server/solr/mycores
    environment:
    - VERBOSE=yes
    - SOLR_HEAP=8g
    entrypoint:
    - docker-entrypoint.sh
    - solr-precreate
    - samples
    
volumes:
  solr_data: null
  mongo_data: null
  neo4j_data: null
  rabbitmq_data: null
  elasticsearch_logs_data: null
